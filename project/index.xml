<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Daniel Glauber</title>
    <link>/project/</link>
    <description>Recent content in Projects on Daniel Glauber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Daniel Glauber</copyright>
    <lastBuildDate>Thu, 04 Aug 2016 13:51:31 -0400</lastBuildDate>
    <atom:link href="/project/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Providence Maps</title>
      <link>/project/maps/</link>
      <pubDate>Thu, 04 Aug 2016 13:51:31 -0400</pubDate>
      
      <guid>/project/maps/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Rethinking iMessage</title>
      <link>/project/sms/</link>
      <pubDate>Thu, 04 Aug 2016 19:35:23 -0400</pubDate>
      
      <guid>/project/sms/</guid>
      <description>&lt;p&gt;This was the final project for my user interfaces class.&lt;/p&gt;

&lt;p&gt;From my partner Kevin Cadena&amp;rsquo;s &lt;a href=&#34;http://www.kevincadena.com&#34;&gt;website&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The idea is an interpretation of Tristan Harris&amp;rsquo; &lt;a href=&#34;http://timewellspent.io/&#34;&gt;Time Well Spent Manifesto&lt;/a&gt; to design interfaces that are more ethical and considerate to a person&amp;rsquo;s needs and life. Along with this another initiative of the project was to rethink how we can interact with the phone in ways more native and natural to it as opposed to tapping buttons which is where the swiping interface developed from. Similarly to how &lt;a href=&#34;www.dontclick.it&#34;&gt;Don&amp;rsquo;t Click It&lt;/a&gt; explores hovering to interface with a web browser.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For more information about the development of this project, &lt;a href=&#34;http://kevincadena.com/img/Sketching:Prototypingv2.pdf&#34;&gt;click here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;View the finished product &lt;a href=&#34;http://kevincadena.com/sms&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Autocorrect</title>
      <link>/project/autocorrect/</link>
      <pubDate>Mon, 01 Aug 2016 19:54:18 -0400</pubDate>
      
      <guid>/project/autocorrect/</guid>
      <description>&lt;p&gt;For my software engineering class I implemented an autocorrection program similar to that of Google&amp;rsquo;s search engine form. The user interface&amp;rsquo;s functions include mouseover and arrowkey suggestion selection.&lt;/p&gt;

&lt;p&gt;Suggestions are generated using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Prefix matching&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Levenshtein_distance&#34;&gt;Levenshtein edit distance&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Whitespace splitting (&amp;ldquo;mousecheese&amp;rdquo; -&amp;gt; &amp;ldquo;mouse cheese&amp;rdquo;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Suggestions were prioritized using n-gram rankings. An n-gram is a sequence of words of length &lt;em&gt;n&lt;/em&gt;. The idea behind n-gram rankings is that the likelihood of a word/suggestion to occur is dependent on the &lt;em&gt;n&lt;/em&gt; words that preceed it. The fact that my ranking algorithm uses n-grams as opposed to, say, &lt;em&gt;bi&lt;/em&gt;-grams means that the ranking process is configurable to take into account any given number of preceeding words (on the live site I have it set to 5).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://apps.danielglauber.online/autocorrect&#34;&gt;Check it out!&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Theatre Collective</title>
      <link>/project/theatre-collective/</link>
      <pubDate>Thu, 04 Aug 2016 11:57:13 -0400</pubDate>
      
      <guid>/project/theatre-collective/</guid>
      <description></description>
    </item>
    
    <item>
      <title>IgniteCS - Classical Highschool Coding Club</title>
      <link>/project/ignite/</link>
      <pubDate>Thu, 04 Aug 2016 13:40:35 -0400</pubDate>
      
      <guid>/project/ignite/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go Puzzle</title>
      <link>/project/go-puzzle/</link>
      <pubDate>Mon, 01 Aug 2016 23:59:13 -0400</pubDate>
      
      <guid>/project/go-puzzle/</guid>
      <description>&lt;p&gt;A friend recently proposed to me this logic puzzle (&lt;a href=&#34;http://ai.stanford.edu/~hdwang/puzzle2.html&#34;&gt;Source&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GoBang is an oriental chess game, also called 5-in-a-Row. Here we consider a modified version:&lt;/p&gt;

&lt;p&gt;The board is a grid extending infinitely to all four directions. In each turn, player A puts two black stones on the board while player B puts down only one white stone. Player A wins if 1000 of his black stones form a consecutive line (either vertical, horizontal, or diagonal). Player B tries to block A from achieving that goal. However, player B himself can never win (i.e. the game continues even if 1000 of his white stones form a line). Show that player A has a strategy so that he can always achieve the goal and win, no matter how player B plays.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I decided it would be a fun side project to make this into an interactive game, so here we go: &lt;a href=&#34;http://danielglauber.online/two-stones/&#34;&gt;http://danielglauber.online/two-stones/&lt;/a&gt; (note: I&amp;rsquo;ve only tested it on Google Chrome, so it may not work on other web browsers and definitely not on mobile)&lt;/p&gt;

&lt;p&gt;I haven&amp;rsquo;t been able to figure it out myself to be honest, so if you manage to get, say, 20 pieces in a row, send me a screenshot!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cellphone Puzzle</title>
      <link>/project/cellphone-puzzle/</link>
      <pubDate>Mon, 01 Aug 2016 23:49:47 -0400</pubDate>
      
      <guid>/project/cellphone-puzzle/</guid>
      <description>&lt;p&gt;The same friend also proposed to me this logic puzzle (&lt;a href=&#34;http://ai.stanford.edu/~hdwang/puzzle2.html&#34;&gt;Source&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Suppose that there is a building with 100 floors. You are given 2 identical cellphones. The most interesting property of the cellphones is that every cellphone has its own &amp;ldquo;threshold&amp;rdquo; floor. Let&amp;rsquo;s call that floor N. What this means is that the cellphone will not break when dropped from any floor below floor N, but the cellphone will definitely break from any floor above floor N, including floor N itself.
For example, if the property of the cellphones is that N equals 15, those cellphones will always break on any floor higher than or equal to the 15th floor, but those cellphones will never break on any floor below floor 15. The same holds true for the other cellphone since they are identical.
These are very strong cellphones, because they can be dropped multiple times without breaking as long as they are dropped from floors below their &amp;ldquo;threshold&amp;rdquo; floor, floor N. But once an cellphone is dropped from a floor above its threshold floor it will break and may not be used again.
Your task is to figure out the threshold floor N by dropping the two cellphones off of the building. What is the minimum number of drops necessary to accomplish this goal?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I again decided it would be fun to make this into a responsive puzzle game of sorts. &lt;a href=&#34;http://danielglauber.online/cellphones/&#34;&gt;Try it out!&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>